<?php
// auto-generated by sfPropelCrud
// date: 2006/08/16 01:09:56
?>
<?php

/**
 * temafattura actions.
 *
 * @package    ##PROJECT_NAME##
 * @subpackage temafattura
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 1415 2006-06-11 08:33:51Z fabien $
 */
class temafatturaActions extends sfActions
{
  private function update($request)
  {
    $this->form->bind($request->getParameter('tema_fattura'), $request->getFiles('tema_fattura'));

    if ($this->form->isValid()) 
    {
      $tema_fattura = $this->form->save();
      $tema_fattura->setIdUtente($this->getUser()->getAttribute('id_utente'));
      $tema_fattura->save();
      return $tema_fattura;
    }
    return false;
  }
  
  public function executeIndex ()
  {
    return $this->forward('temafattura', 'list');
  }

  public function executeList ()
  {
    $this->tema_fatturas = TemaFatturaPeer::doSelect(new Criteria());
  }

  public function executeCreate ()
  {
    $this->form = new TemaFatturaForm($this->tema_fattura);
    $this->tema_fattura = new TemaFattura();
    $this->tema_fattura->setTemplate(file_get_contents(sfConfig::get('sf_data_dir').DIRECTORY_SEPARATOR.'template_fattura'.DIRECTORY_SEPARATOR.'template.htm'));
    $this->tema_fattura->setCss(file_get_contents(sfConfig::get('sf_data_dir').DIRECTORY_SEPARATOR.'template_fattura'.DIRECTORY_SEPARATOR.'stile.css'));
    $this->setTemplate('edit');
  }
  
  public function executeEdit ($request)
  {
    $temafatturaId = $request->getPostParameter('tema_fattura[id]', $request->getParameter('id'));

    $this->form = new TemaFatturaForm();
  
    if (!$temafatturaId)
    {
      $tema_fattura = new TemaFattura();
    }
    else
    {
      $tema_fattura = TemaFatturaPeer::retrieveByPk($temafatturaId);
      $this->forward404Unless($tema_fattura);
    }

    $this->form = new TemaFatturaForm($tema_fattura);
    
    if($request->isMethod('post')) 
    {
      $tema_fattura = $this->update($request);
    
      if ($tema_fattura)
      {
        $this->getRequest()->setAttribute('success','Tema salvato con successo');
        $this->getRequest()->setParameter('id',$tema_fattura->getId());
        return $this->redirect('temafattura/edit?id='.$tema_fattura->getId().'&success=1');
      }
    }
  }
  
  public function executeUpdate ($request)
  {
    $temafatturaId = $request->getPostParameter('tema_fattura[id]', $request->getParameter('id'));
    
    if (!$temafatturaId)
    {
      $tema_fattura = new TemaFattura();
    }
    else
    {
      $tema_fattura = TemaFatturaPeer::retrieveByPk($temafatturaId);
      $this->forward404Unless($tema_fattura);
    }

    $this->form = new TemaFatturaForm($tema_fattura);
    
    $tema_fattura = $this->update($request);
    
    if ($tema_fattura)
    {
      $this->getRequest()->setAttribute('success','Tema salvato con successo');
      $this->getRequest()->setParameter('id',$tema_fattura->getId());
      return $this->redirect('temafattura/edit?id='.$tema_fattura->getId().'&success=1');
    }
    return $this->redirect('temafattura/create');
  }

  public function executeDelete ()
  {
    $tema_fattura = TemaFatturaPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($tema_fattura);

    $tema_fattura->delete();

    return $this->redirect('temafattura/index');
  }

  public function handleErrorUpdate()
  {
  	if(!$this->getRequestParameter('id',0))
  	$this->forward('temafattura','create');
  	else
  	$this->forward('temafattura','edit');
  }

  public function executeHelp(){

  }
}
